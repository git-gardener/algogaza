class Solution {
    static boolean[] visited;
    static int answer;
    
    public int solution(String begin, String target, String[] words) {
        answer = 50;
        visited = new boolean[words.length];
        dfs(begin, target, 0, words);

        if(answer == 50) return 0;
        else return answer;
    }
    
    
    public void dfs(String begin, String target, int count, String[] words){ 
    if(begin.equals(target)){
        System.out.println(count);
	answer = count;
	return;
	}
	
	for(int i=0; i< words.length; i++){
	if(visited[i] ==false && check(begin, words[i])){
	    visited[i]=true;
   
	    dfs(words[i], target, count+1, words);
	    visited[i] = false;
        }
    }
}
    
    public boolean check(String begin, String next){
	int count=0;
	for(int i = 0; i<begin.length(); i++){
		if(begin.charAt(i) != next.charAt(i)){
			count++;
		}
	}
	if(count > 1) return false;
	else 
		return true;
}
    
}